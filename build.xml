<?xml version="1.0"?>

<project name="xmlid" default="all" >
  <!-- Location of where to put our build output -->
  <property name="tmp.dir" value="."/>

  <!-- Build directories -->
  <property name="build.dir" value="${tmp.dir}/build"/>
  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <property name="build.docs.dir" value="${build.dir}/docs"/>
  <property name="build.lib.dir" value="${build.dir}/lib"/>
  <property name="build.tests.dir" value="${build.dir}/tests"/>
  <property name="lib.dir" value="lib"/>

  <path id="xmlid.classpath">
    <pathelement location="${build.classes.dir}"/>
    <pathelement location="${lib.dir}/xml-apis.jar"/>
    <pathelement location="${lib.dir}/xercesImpl.jar"/>
  </path>

  <!-- Source constants and directories -->
  <property name="src.dir" value="src" />

  <!-- Build properties -->
  <property name="build.debug" value="off"/>
  <property name="build.deprecation" value="on"/>
  <property name="build.optimize" value="on"/>

  <!-- Document constants -->
  <property name="copyright.name" value="Norman Walsh"/>
  <property name="copyright.date" value="2011"/>

  <property name="copyright.message"
	    value="Copyright (C) ${copyright.date} ${copyright.name}."/>

  <!-- Public Targets -->
  <target name="all"
          depends="init,xiread,jar,docs"
          description="This is the default target. Compiles the program.">
  </target>

  <target name="xiread"
          depends="init,xmlidfilter">
    <echo message="Compiling xiread classes..." />
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
	   deprecation="${build.deprecation}" includeantruntime="false">
      <classpath refid="xmlid.classpath"/>
      <include name="com/nwalsh/xmlidfilter/apps/*"/>
    </javac>
  </target>

  <target name="xmlidfilter"
          depends="init">
    <echo message="Compiling xml:id Filter/Reader classes..." />
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
	   deprecation="${build.deprecation}" includeantruntime="false">
      <classpath refid="xmlid.classpath"/>
      <!--compilerarg value="-Xlint:unchecked"/-->
      <include name="com/nwalsh/xmlidfilter/*"/>
    </javac>
  </target>

  <target name="clean"
	  description="Deletes all files that are generated by the build.">
    <delete dir="${build.dir}"/>
  </target>

  <target name="docs"
          depends="javadocs"
	  description="Generates all documentation for a project.">
    <copy file="src/overview.html" tofile="${build.docs.dir}/index.html"/>
    <copy todir="${build.tests.dir}">
      <fileset dir="tests" includes="**/*.xml"/>
    </copy>
  </target>

  <target name="javadocs"
          depends="init"
          description="Generates the JavaDocs for the project.">

    <mkdir dir="${build.dir}/apidocs"/>
    <javadoc sourcepath="${src.dir}"
             destdir="${build.dir}/apidocs"
	     Overview="${src.dir}/overview.html"
             author="true"
             version="true"
             use="true"
	     windowtitle="xml:id Filter/Reader"
	     doctitle="xml:id"
	     bottom="${copyright.message}">
      <classpath refid="xmlid.classpath"/>
      <package name="com.nwalsh.xmlidfilter"/>
      <package name="com.nwalsh.xmlidfilter.apps"/>
    </javadoc>
  </target>

  <target name="jar" depends="xiread" description="Jar all classes">
    <echo message="Jarring xmlidfilter.jar from ${build.classes.dir}" />
    <jar jarfile="${build.lib.dir}/xmlidfilter.jar"
	 manifest="${src.dir}/manifest.xmlidfilter"
         basedir="${build.classes.dir}"
	 excludes="**/apps/*"/>
    <echo message="Jarring xmlidapps.jar from ${build.classes.dir}" />
    <jar jarfile="${build.lib.dir}/xmlidapps.jar"
	 manifest="${src.dir}/manifest.xmlidapps"
         basedir="${build.classes.dir}"
	 excludes="**/xmlid/*"/>
  </target>

  <!-- Internal Targets -->
  <target name="init">
    <echo message="Buildfile init: $Revision: 1.1 $"/>
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.classes.dir}" />
    <mkdir dir="${build.docs.dir}" />
    <mkdir dir="${build.lib.dir}" />
    <mkdir dir="${build.tests.dir}" />
  </target>
</project>
